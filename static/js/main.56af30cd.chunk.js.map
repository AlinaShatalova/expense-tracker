{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","selected","onChangeFilter","value","onChange","event","target","ExpenseDate","date","month","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","item","id","ChartBar","maxValue","label","barFillHeight","Math","round","style","height","Chart","dataPoints","dataPointValues","dataPoint","totalMaximum","max","point","ExpensesChart","expenses","chartDataPoints","forEach","expense","expenseMonth","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","onSaveExpenseData","onCancel","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","type","min","step","onClick","NewExpense","onAddExpense","isEditing","setIsEditing","enteredExpenseData","random","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.56af30cd.chunk.js","sourcesContent":["import './Card.css';\n\nconst Card = (props) => {\n    const classes = 'card ' + props.className;\n    return (\n        <div className={classes}>{props.children}</div>\n    )\n};\n\nexport default Card;","import React from 'react';\n\nimport './ExpensesFilter.css';\n\nconst ExpensesFilter = ({ selected, onChangeFilter }) => {\n\n    const dropdownChangeHandler = (event) => {\n        onChangeFilter(event.target.value);\n    };\n\n    return (\n        <div className='expenses-filter'>\n            <div className='expenses-filter__control'>\n                <label>Filter by year</label>\n                <select value={selected} onChange={dropdownChangeHandler}>\n                    <option value='2022'>2022</option>\n                    <option value='2021'>2021</option>\n                    <option value='2020'>2020</option>\n                    <option value='2019'>2019</option>\n                </select>\n            </div>\n        </div>\n    );\n};\n\nexport default ExpensesFilter;","import './ExpenseDate.css';\n\nconst ExpenseDate = (props) => {\n    const { date } = props;\n\n    const month = date.toLocaleString('en-US', { month: 'long' });\n    const day = date.toLocaleString('en-US', { day: '2-digit' });\n    const year = date.getFullYear();\n\n    return (\n        <div className=\"expense-date\">\n            <div className=\"expense-date__month\">{month}</div>\n            <div className=\"expense-date__year\">{year}</div>\n            <div className=\"expense-date__day\">{day}</div>\n        </div>\n    )\n};\n\nexport default ExpenseDate;","import './ExpenseItem.css';\nimport ExpenseDate from './ExpenseDate';\nimport Card from '../UI/Card';\n\nconst ExpenseItem = (props) => {\n    const { title, amount, date } = props;\n    return (\n        <li>\n            <Card className=\"expense-item\">\n                <ExpenseDate date={date} />\n                <div className=\"expense-item__description\">\n                    <h2>{title}</h2>\n                    <div className=\"expense-item__price\">${amount}</div>\n                </div>\n            </Card>\n        </li>\n    );\n};\n\nexport default ExpenseItem;\n","import ExpenseItem from \"./ExpenseItem\";\nimport './ExpensesList.css';\n\nconst ExpensesList = ({ items }) => {\n    if (items.length === 0) {\n        return <h2 className=\"expenses-list__fallback\">Found no expenses</h2>\n    }\n\n    return (\n        <ul className=\"expenses-list\">\n            {items.map((item) => (\n                <ExpenseItem\n                    key={item.id}\n                    title={item.title}\n                    amount={item.amount}\n                    date={item.date}\n                />\n            ))}\n        </ul>\n    )\n};\n\nexport default ExpensesList;","import './ChartBar.css';\n\nconst ChartBar = ({ value, maxValue, label }) => {\n    let barFillHeight = '0%';\n\n    if (maxValue > 0) {\n        barFillHeight = Math.round((value / maxValue) * 100) + '%';\n    }\n\n    return (\n        <div className=\"chart-bar\">\n            <div className=\"chart-bar__inner\">\n                <div\n                    className=\"chart-bar__fill\"\n                    style={{ height: barFillHeight }}\n                ></div>\n            </div>\n            <div className=\"chart-bar__label\">{label}</div>\n        </div>\n    );\n};\n\nexport default ChartBar;","import ChartBar from './ChartBar';\nimport './Chart.css';\n\nconst Chart = ({ dataPoints }) => {\n    const dataPointValues = dataPoints.map((dataPoint) => dataPoint.value);\n    const totalMaximum = Math.max(...dataPointValues);\n\n    return (\n        <div className=\"chart\">\n            {dataPoints.map((point) =>(\n                <ChartBar\n                    key={point.label}\n                    value={point.value}\n                    maxValue={totalMaximum}\n                    label={point.label}\n                />\n            ))}\n        </div>\n    )\n};\n\nexport default Chart;","import Chart from '../Chart/Chart';\n\nconst ExpensesChart = ({ expenses }) => {\n    const chartDataPoints = [\n        { label: 'Jan', value: 0 },\n        { label: 'Feb', value: 0 },\n        { label: 'Mar', value: 0 },\n        { label: 'Apr', value: 0 },\n        { label: 'May', value: 0 },\n        { label: 'Jun', value: 0 },\n        { label: 'Jul', value: 0 },\n        { label: 'Aug', value: 0 },\n        { label: 'Sep', value: 0 },\n        { label: 'Oct', value: 0 },\n        { label: 'Nov', value: 0 },\n        { label: 'Dec', value: 0 },\n    ];\n\n    expenses.forEach((expense) => {\n        const expenseMonth = expense.date.getMonth();\n        chartDataPoints[expenseMonth].value += expense.amount;\n    });\n\n    return <Chart dataPoints ={chartDataPoints} />\n};\n\nexport default ExpensesChart;","import { useState } from 'react';\nimport Card from \"../UI/Card\";\nimport './Expenses.css';\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpensesList from './ExpensesList';\nimport ExpensesChart from './ExpensesChart';\n\nconst Expenses = (props) => {\n    const { items } = props;\n    const [filteredYear, setFilteredYear] = useState('2022');\n\n    const filterChangeHandler = (selectedYear) => {\n        setFilteredYear(selectedYear);\n    };\n\n    const filteredExpenses = items.filter((item) => item.date.getFullYear().toString() === filteredYear);\n\n    return (\n        <div>\n            <Card className=\"expenses\">\n                <ExpensesFilter selected={filteredYear} onChangeFilter={filterChangeHandler} />\n                <ExpensesChart expenses={filteredExpenses} />\n                <ExpensesList items={filteredExpenses} />\n            </Card>\n        </div>\n    )\n};\n\nexport default Expenses;","import { useState } from 'react';\nimport './ExpenseForm.css';\n\nconst ExpenseForm = ({ onSaveExpenseData, onCancel }) => {\n    const [enteredTitle, setEnteredTitle] = useState('');\n    const [enteredAmount, setEnteredAmount] = useState('');\n    const [enteredDate, setEnteredDate] = useState('');\n\n    const titleChangeHandler = (event) => {\n        setEnteredTitle(event.target.value);\n    };\n    const amountChangeHandler = (event) => {\n        setEnteredAmount(event.target.value);\n    };\n    const dateChangeHandler = (event) => {\n        setEnteredDate(event.target.value);\n    };\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        const expenseData = {\n            title: enteredTitle,\n            amount: +enteredAmount,\n            date: new Date(enteredDate),\n        };\n        onSaveExpenseData(expenseData);\n        setEnteredTitle('');\n        setEnteredAmount('');\n        setEnteredDate('');\n    };\n\n    return (\n        <form onSubmit={submitHandler}>\n            <div className=\"new-expense__controls\">\n                <div className=\"new-expense__control\">\n                    <label>Title</label>\n                    <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler} />\n                </div>\n                <div className=\"new-expense__control\">\n                    <label>Amount</label>\n                    <input type=\"number\" value={enteredAmount} min=\"0.01\" step=\"0.01\" onChange={amountChangeHandler} />\n                </div>\n                <div className=\"new-expense__control\">\n                    <label>Date</label>\n                    <input type=\"date\" value={enteredDate} min=\"2019-01-01\" max=\"2022-12-31\" onChange={dateChangeHandler} />\n                </div>\n            </div>\n            <div className=\"new-expense__actions\">\n                <button onClick={onCancel} type=\"button\">Cancel</button>\n                <button type=\"submit\">Add Expense</button>\n            </div>\n        </form>\n    )\n};\n\nexport default ExpenseForm;","import { useState } from 'react';\nimport './NewExpense.css';\nimport ExpenseForm from './ExpenseForm';\n\nconst NewExpense = ({ onAddExpense }) => {\n    const [isEditing, setIsEditing] = useState(false);\n\n    const startEditingHandler = () => {\n        setIsEditing(true);\n    }\n\n    const stopEditinfHandler = () => {\n        setIsEditing(false);\n    }\n\n    const saveExpenseDataHandler = (enteredExpenseData) => {\n        const expenseData = {\n            ...enteredExpenseData,\n            id: Math.random().toString(),\n        };\n        onAddExpense(expenseData);\n        setIsEditing(false);\n    };\n\n    return (\n        <div className=\"new-expense\">\n            {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\n            {isEditing && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={stopEditinfHandler} />}\n        </div>\n    )\n};\n\nexport default NewExpense;","import { useState } from 'react';\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}